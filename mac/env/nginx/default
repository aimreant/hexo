##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	#listen 443 ssl;
        #listen [::]:443 ssl ipv6only=on;

        #ssl on;
	#ssl_certificate /etc/letsencrypt/live/www.jianyujianyu.com/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/www.jianyujianyu.com/privkey.pem;
        #ssl_trusted_certificate /etc/letsencrypt/live/www.jianyujianyu.com/chain.pem;
	#ssl_session_timeout  5m;

	#root /var/www/hexob/mac/public;
	root /home/ubuntu/public;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	#server_name www.jianyujianyu.com;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	#server_name www.jianyujianyu.com;

	# prevent some basic cc attack
	if ($http_user_agent ~* (ApacheBench|pingback|WordPress|MJ12bot|AhrefsBot|360JK|PHP|php|Jorgee) ) {return 400;}
	if ($http_user_agent = "" ) {return 100;}
	if ( $request = "POST /reg.html HTTP/1.1" ) {return 400;}
	#if ( $request = "POST / HTTP/1.1" ) {return 400;}
	#if ( $request = "POST / HTTP/1.0" ) {return 400;}
	if ( $request = "POST // HTTP/1.0" ) {return 400;}

	# deny invalid request with special symbols
	if ( $query_string ~* ".*[;'<>].*" ) {
		return 400;
	}
	if ( $query_string ~* ".*[\;'\<\>].*" ){
		return 400;
	}

	# deny invalid request with special suffix
	location ~* \.(bak|swp|sqlite|sql|file|sh|inc|ear|config)$ {
		deny all;
	}

	# deny wordpress xmlrpc request
	location /xmlrpc.php {
                deny all;
        }

	# deny typecho install request
        location /install.php {
                deny all;
        }
	location /install {
                deny all;
        }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
upstream tomcat  {
	server  127.0.0.1:8080;
}

server {
	listen 3819;
	listen [::]:3819;

	#server_name example.com;

	#root /var/www/example.com;
	#index index.html;

	location / {
		#try_files $uri $uri/ =404;
		proxy_pass   http://tomcat;
		proxy_redirect  off;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Request-Url $request_uri; 
	}


}
